<% layout("/layouts/boilerplate.ejs") %>

    <body>
        <div class="container">
            <div style="text-align: center;">
                <h1>User Profile</h1>
            </div>
            <hr />
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <p><strong>Name:</strong>
                        <%= user.name %>
                    </p>
                    <p><strong>Email:</strong>
                        <%= user.email %>
                    </p>
                    <p id="role1"></p>
                    <form id="updateRoleForm" method="PUT" action="/users/<%= user._id %>/roles">
                        <div class="form-group">
                            <label for="newRole">Select New Role:</label>
                            <select id="newRole" name="role" class="form-control">
                                <option value="1">System admin</option>
                                <option value="2">sts manager</option>
                                <option value="3">landfill manager</option>
                                <option value="4">unassigned user</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="sts_id">Enter Sts Id:</label>
                            <input type="text" id="sts_id" name="sts_id" class="form-control" placeholder="Enter sts id"
                                required>
                        </div>
                        <button type="submit" class="btn btn-primary">Update Role</button>
                    </form>

                    <hr />

                    <button id="deleteUserButton" class="btn btn-danger">Delete User</button>
                </div>
            </div>
        </div>

        <script>
            function updateRoleText(roleValue) {
                switch (roleValue) {
                    case "1":
                        return 'System Admin';
                    case "2":
                        return 'STS Manager';
                    case "3":
                        return 'Landfill Manager';
                    default:
                        return 'Unassigned User';
                }
            }

            document.getElementById('role1').innerHTML = '<strong>Current Role:</strong> ' + updateRoleText('<%= user.role %>');

            const updateRoleForm = document.getElementById("updateRoleForm");
            const deleteUserButton = document.getElementById("deleteUserButton");

            updateRoleForm.addEventListener("submit", async (event) => {
                event.preventDefault(); // Prevent default form submission

                const newRole = document.getElementById("newRole").value;
                const stsId = document.getElementById("sts_id").value;

                try {
                    const response = await fetch(`/users/<%= user._id %>/roles`, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ role: newRole, sts_id: stsId }),
                    });

                    if (response.ok) {
                        const updatedUser = await response.json();
                        let roleText = "";
                        switch (updatedUser.role) {
                            case 1:
                                roleText = "System Admin";
                                break;
                            case 2:
                                roleText = "STS Manager";
                                break;
                            case 3:
                                roleText = "Landfill Manager";
                                break;
                            default:
                                roleText = "Unassigned User";
                        }
                        document.getElementById("role1").innerHTML = `<strong>Current Role:</strong> ${roleText}`;
                        alert("Role updated successfully!");
                    } else {
                        alert("An error occurred while updating the role.");
                    }
                } catch (error) {
                    console.error("Error updating user role:", error);
                    alert("An error occurred while updating the role.");
                }
            });

            deleteUserButton.addEventListener("click", async () => {
                const confirmDelete = confirm("Are you sure you want to delete this user?");

                if (confirmDelete) {
                    try {
                        const response = await fetch(`/users/<%= user._id %>`, {
                            method: "DELETE",
                        });

                        if (response.ok) {
                            alert("User deleted successfully!");
                            window.location.href = "/users"; // Redirect to the home page or another appropriate page
                        } else {
                            alert("An error occurred while deleting the user.");
                        }
                    } catch (error) {
                        console.error("Error deleting user:", error);
                        alert("An error occurred while deleting the user.");
                    }
                }
            });
        </script>
        <div style="margin-bottom: 20px;"></div>
    </body>